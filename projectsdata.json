[{
	"ProjectTitle": "JavaUniversalBackend",
	"SoftwareToolsTechnology": "UML (Design Tool), VMWare for Test Enviroment, Github, MongoDB",
	"Problem": "A lot of friends who start a small business want a Web App and a Mobile App, I was always lazy to write Backend services for them, So I decided to start this project",
	"ProjectDescription": "<p>Idea is to create a zero-programming backend system that can be configured just by configuring the server. This idea came as a lot of people have the same requirements just some variables change. One friend wanted me to make a backend of an HRMS system for small businesses, Other who runs a business in property wanted a central place to do all that. Anyways, I have started designing the system. Still having some issues. Mainly how to handle Security and Parameter viewability. <br>Beta Specifications: <a href=\"http://anindyabiswas.io/JavaUniversalBackend/\">Beta Specs.</a>This project is opensource so please feel free if you see something glaringly missing. </p>",
	"Organization": "anindyabiswas.io(myself)",
	"anchor":"JavaUniversalBackend",
	"seokeywords":""
},{
	"ProjectTitle": "Appexe Video Streaming Engine",
	"SoftwareToolsTechnology": "UML (Design Tool), AWS S3, AWS Lambda Functions, Amazon Elastic Transcoder",
	"Problem": "JBAT one of our business partners wanted a YouTube-like Feature in Appexe",
	"ProjectDescription": "<p>The main challenge was either to use ffmpeg on an instance and then upload converted videos on S3 bucket or use an existing mechanism in AWS to do the conversion for us. So, we decided to go with elastic transcoder instead to do all our transcoding. To do this we would first upload a video from a Runtime (Android, iOS, Windows, Mobile Web) upload such images to s3. On S3 side we would trigger a Lambda function and that would then create a Job pass it to Elastic transcoder. The final converted videos would then be stored in separate buckers of 360p, 720p, 1080p. In case there is a notification of failure to transcode from Elastic Transcoder we would trigger another Lambda to update video database of failures.</p>",
	"Organization": "Mobilous Inc.",
	"anchor":"videostreaming",
	"seokeywords":""
}]
